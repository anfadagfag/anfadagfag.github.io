<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2023/04/14/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <tags>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title>Vuex基本使用</title>
    <url>/2023/04/15/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%AC%94%E8%AE%B0/Vuex%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="Vuex"><a href="#Vuex" class="headerlink" title="Vuex"></a>Vuex</h2><p><strong>工作原理图</strong></p>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230415233145.png" alt="image-20230410164330185"></p>
<h3 id="搭建vuex环境"><a href="#搭建vuex环境" class="headerlink" title="搭建vuex环境"></a>搭建vuex环境</h3><p><strong>安装vuex</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">npm i vuex</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230415233319.png" alt="image-20230410164330185"></p>
<p><strong>创建store</strong>  <code>index.js</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//创建Vuex中最为核心的sotre</span></span><br><span class="line"><span class="comment">//引入vuex</span></span><br><span class="line"><span class="keyword">import</span> &#123; createStore &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//用于响应组件中的动作</span></span><br><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">    <span class="title function_">jia</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;actions中的+被调用了&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用于操作数据 --state--</span></span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用于存储数据</span></span><br><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">    <span class="attr">sum</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建store</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">createStore</span>(&#123;</span><br><span class="line">    actions,</span><br><span class="line">    mutations,</span><br><span class="line">    state</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p><strong>引入store</strong>    <code>main.js</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//引入的不再是vue的构造函数 ，因为的是一个名为 createApp 的工厂函数</span></span><br><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span>  store  <span class="keyword">from</span> <span class="string">&#x27;./store&#x27;</span></span><br><span class="line"><span class="title function_">createApp</span>(<span class="title class_">App</span>).<span class="title function_">use</span>(store).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>使用<strong>vuex</strong></p>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230415233354.png" alt="image-20230410170440136"></p>
<p><strong>参数问题</strong></p>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230415233425.png" alt="image-20230410171547312"></p>
<p>context 类似与小型的store</p>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230415233451.png" alt="image-20230410171708444"></p>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230415233517.png" alt="image-20230410171852236"></p>
<h4 id="vuex小案例"><a href="#vuex小案例" class="headerlink" title="vuex小案例"></a>vuex小案例</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;h1&gt;当前求和为：&#123;&#123; $store.state.sum</span><br><span class="line">         &#125;&#125;&lt;/h1&gt;</span><br><span class="line">        &lt;select v-model.number=&quot;n&quot;&gt;</span><br><span class="line">            &lt;option value=&quot;1&quot;&gt;1&lt;/option&gt;</span><br><span class="line">            &lt;option value=&quot;2&quot;&gt;2&lt;/option&gt;</span><br><span class="line">            &lt;option value=&quot;3&quot;&gt;3&lt;/option&gt;</span><br><span class="line">        &lt;/select&gt;</span><br><span class="line">        &lt;button @click=&quot;increment&quot;&gt;+&lt;/button&gt;</span><br><span class="line">        &lt;button @click=&quot;decrement&quot;&gt;-&lt;/button&gt;</span><br><span class="line">        &lt;button @click=&quot;incrementOdd&quot;&gt;当前奇数再+&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    name: &#x27;Count&#x27;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            n: 1</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        increment() &#123;</span><br><span class="line">           this.$store.dispatch(&#x27;jia&#x27;,this.n)</span><br><span class="line">        &#125;,</span><br><span class="line">        decrement()&#123;</span><br><span class="line">            this.$store.dispatch(&#x27;jian&#x27;,this.n)</span><br><span class="line">        &#125;,</span><br><span class="line">        incrementOdd()&#123;</span><br><span class="line">            this.$store.dispatch(&#x27;jiaOdd&#x27;,this.n)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">button &#123;</span><br><span class="line">    margin-left: 10px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//创建Vuex中最为核心的sotre</span></span><br><span class="line"><span class="comment">//引入vuex</span></span><br><span class="line"><span class="keyword">import</span> &#123; createStore &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//用于响应组件中的动作</span></span><br><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">    <span class="title function_">jia</span>(<span class="params">context,value</span>) &#123;</span><br><span class="line">        <span class="comment">// console.log(context,value)</span></span><br><span class="line">        context.<span class="title function_">commit</span>(<span class="string">&#x27;JIA&#x27;</span>,value)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">jian</span>(<span class="params">context,value</span>)&#123;</span><br><span class="line">        context.<span class="title function_">commit</span>(<span class="string">&#x27;JIAN&#x27;</span>,value)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">jiaOdd</span>(<span class="params">context,value</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(context.<span class="property">state</span>.<span class="property">sum</span> % <span class="number">2</span>)&#123;</span><br><span class="line">            context.<span class="title function_">commit</span>(<span class="string">&#x27;JIAODD&#x27;</span>,value)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用于操作数据 --state--</span></span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">    <span class="title function_">JIA</span>(<span class="params">state,value</span>)&#123;</span><br><span class="line">        <span class="comment">// console.log(state)</span></span><br><span class="line">        state.<span class="property">sum</span> += value</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">JIAN</span>(<span class="params">state,value</span>)&#123;</span><br><span class="line">        state.<span class="property">sum</span> -= value</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">JIAODD</span>(<span class="params">state,value</span>)&#123;</span><br><span class="line">        state.<span class="property">sum</span> += value</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用于存储数据</span></span><br><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">    <span class="attr">sum</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建store</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">createStore</span>(&#123;</span><br><span class="line">    actions,</span><br><span class="line">    mutations,</span><br><span class="line">    state</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="getters配置项"><a href="#getters配置项" class="headerlink" title="getters配置项"></a>getters配置项</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//用于将state中的数据进行加工</span></span><br><span class="line"><span class="keyword">const</span> getters = &#123;</span><br><span class="line">    <span class="title function_">bigNum</span>(<span class="params">state</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> state.<span class="property">sum</span> * <span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230415233547.png" alt="image-20230410184319490"></p>
<h4 id="mapState和mapGetters"><a href="#mapState和mapGetters" class="headerlink" title="mapState和mapGetters"></a>mapState和mapGetters</h4><p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230415233642.png" alt="image-20230410190026551"></p>
<blockquote>
<p>书写计算属性</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">        //程序员亲自书写计算属性</span><br><span class="line">        he()&#123;</span><br><span class="line">            return this.$store.state.sum</span><br><span class="line">        &#125;,</span><br><span class="line">        xuexaio()&#123;</span><br><span class="line">            return this.$store.state.school</span><br><span class="line">        &#125;,</span><br><span class="line">        banji()&#123;</span><br><span class="line">            return  this.$store.state.classId</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>mapState生成计算属性</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230415233712.png" alt="image-20230410190847682"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//借助mapState生成计算属性 --数组写法 计算属性和state数据属性名相同</span><br><span class="line">    computed: &#123;</span><br><span class="line">        ...mapState([&#x27;sum&#x27;,&#x27;school&#x27;,&#x27;classId&#x27;])</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>mapGetters同上</p>
<h4 id="mapActions和mapMutations"><a href="#mapActions和mapMutations" class="headerlink" title="mapActions和mapMutations"></a>mapActions和mapMutations</h4><blockquote>
<p>mapMutations</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">		//调用mapMutations生成对应的方法，方法中会调用commit去联系mutations</span><br><span class="line">        ...mapMutations(&#123;increment:&#x27;JIA&#x27;,decrement:&#x27;JIAN&#x27;&#125;)</span><br><span class="line">        ,</span><br><span class="line">        incrementOdd() &#123;</span><br><span class="line">            this.$store.dispatch(&#x27;jiaOdd&#x27;, this.n)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p><strong>有参数必须传值</strong></p>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230415233732.png" alt="image-20230410192222043"></p>
<p>对象写法同mapState</p>
<h4 id="Vuex模块化"><a href="#Vuex模块化" class="headerlink" title="Vuex模块化"></a>Vuex模块化</h4><ol>
<li><p>目的：让代码更好维护，让多种数据分类更加明确。</p>
</li>
<li><p>修改<code>store.js</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> countAbout = &#123;</span><br><span class="line">  <span class="attr">namespaced</span>:<span class="literal">true</span>,<span class="comment">//开启命名空间</span></span><br><span class="line">  <span class="attr">state</span>:&#123;<span class="attr">x</span>:<span class="number">1</span>&#125;,</span><br><span class="line">  <span class="attr">mutations</span>: &#123; ... &#125;,</span><br><span class="line">  <span class="attr">actions</span>: &#123; ... &#125;,</span><br><span class="line">  <span class="attr">getters</span>: &#123;</span><br><span class="line">    <span class="title function_">bigSum</span>(<span class="params">state</span>)&#123;</span><br><span class="line">       <span class="keyword">return</span> state.<span class="property">sum</span> * <span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> personAbout = &#123;</span><br><span class="line">  <span class="attr">namespaced</span>:<span class="literal">true</span>,<span class="comment">//开启命名空间</span></span><br><span class="line">  <span class="attr">state</span>:&#123; ... &#125;,</span><br><span class="line">  <span class="attr">mutations</span>: &#123; ... &#125;,</span><br><span class="line">  <span class="attr">actions</span>: &#123; ... &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> <span class="title class_">Vuex</span>.<span class="title class_">Store</span>(&#123;</span><br><span class="line">  <span class="attr">modules</span>: &#123;</span><br><span class="line">    countAbout,</span><br><span class="line">    personAbout</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>开启命名空间后，组件中读取state数据：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//方式一：自己直接读取</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$store</span>.<span class="property">state</span>.<span class="property">personAbout</span>.<span class="property">list</span></span><br><span class="line"><span class="comment">//方式二：借助mapState读取：</span></span><br><span class="line">...<span class="title function_">mapState</span>(<span class="string">&#x27;countAbout&#x27;</span>,[<span class="string">&#x27;sum&#x27;</span>,<span class="string">&#x27;school&#x27;</span>,<span class="string">&#x27;subject&#x27;</span>]),</span><br></pre></td></tr></table></figure>
</li>
<li><p>开启命名空间后，组件中读取getters数据：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//方式一：自己直接读取</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$store</span>.<span class="property">getters</span>[<span class="string">&#x27;personAbout/firstPersonName&#x27;</span>]</span><br><span class="line"><span class="comment">//方式二：借助mapGetters读取：</span></span><br><span class="line">...<span class="title function_">mapGetters</span>(<span class="string">&#x27;countAbout&#x27;</span>,[<span class="string">&#x27;bigSum&#x27;</span>])</span><br></pre></td></tr></table></figure>
</li>
<li><p>开启命名空间后，组件中调用dispatch</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//方式一：自己直接dispatch</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">dispatch</span>(<span class="string">&#x27;personAbout/addPersonWang&#x27;</span>,person)</span><br><span class="line"><span class="comment">//方式二：借助mapActions：</span></span><br><span class="line">...<span class="title function_">mapActions</span>(<span class="string">&#x27;countAbout&#x27;</span>,&#123;<span class="attr">incrementOdd</span>:<span class="string">&#x27;jiaOdd&#x27;</span>,<span class="attr">incrementWait</span>:<span class="string">&#x27;jiaWait&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>开启命名空间后，组件中调用commit</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//方式一：自己直接commit</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">commit</span>(<span class="string">&#x27;personAbout/ADD_PERSON&#x27;</span>,person)</span><br><span class="line"><span class="comment">//方式二：借助mapMutations：</span></span><br><span class="line">...<span class="title function_">mapMutations</span>(<span class="string">&#x27;countAbout&#x27;</span>,&#123;<span class="attr">increment</span>:<span class="string">&#x27;JIA&#x27;</span>,<span class="attr">decrement</span>:<span class="string">&#x27;JIAN&#x27;</span>&#125;),</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>Vue</tag>
        <tag>Vuex</tag>
      </tags>
  </entry>
  <entry>
    <title>HTTP</title>
    <url>/2023/04/15/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%AC%94%E8%AE%B0/http/</url>
    <content><![CDATA[<h2 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h2><p>HTTP是一个在计算机世界里专门在两点之间传输文字、图片、音频、视频等超文本数据的约定和规范</p>
<h3 id="HTTP状态码"><a href="#HTTP状态码" class="headerlink" title="HTTP状态码"></a>HTTP状态码</h3><h4 id="常见的状态码分类"><a href="#常见的状态码分类" class="headerlink" title="常见的状态码分类"></a>常见的状态码分类</h4><ul>
<li>1xx - 服务器收到请求</li>
<li>2xx - 请求成功</li>
<li>3xx - 重定向</li>
<li>4xx - 客户端错误</li>
<li>5xx - 服务器错误</li>
</ul>
<h4 id="常见状态码"><a href="#常见状态码" class="headerlink" title="常见状态码"></a>常见状态码</h4><ul>
<li>200 - 表示一切正常，如果是非<code>HEAD</code>请求，服务器返回的响应头都会有body数据</li>
<li>204 - 与200基本相同，但响应头没有body数据</li>
<li>301 - 永久重定向，表示资源已经不存在了，需要更新URL重新发送请求，获取资源。(配合location，浏览器自动处理)</li>
<li>302 - 表示临时重定向，说明请求资源还在，但暂时需要另一个URL来访问。(配合location，浏览器自动处理)</li>
<li>403 - 表示服务器禁止访问资源，并不是客户端的请求出错。</li>
<li>404 - 请求的资源在服务器上未找到。</li>
<li>500 - 服务器错误</li>
<li>502 - 通常是服务器作为网关或代理时返回的错误码，表示服务器自身工作正常，访问后端服务器发生了错误。</li>
<li>503 - 服务器繁忙，无法响应客户端</li>
</ul>
<h3 id="HTTP缓存技术"><a href="#HTTP缓存技术" class="headerlink" title="HTTP缓存技术"></a>HTTP缓存技术</h3><h4 id="强制缓存"><a href="#强制缓存" class="headerlink" title="强制缓存"></a>强制缓存</h4><p>只要浏览器判断缓存没有过期，则直接使用浏览器的本地缓存，决定是否使用缓存的主动性在于浏览器这边。</p>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/image-20230415200005934.png" alt="bilibili资源"></p>
<p>max-age(一年时间)，表示资源时长期不需要改变的，浏览器或CDN都可以长期存储该资源</p>
<p>cache-control的值:</p>
<ul>
<li>max-age: 缓存最大过期时间</li>
<li>no-cache: 可以在客户端存储资源，但每次使用前都要和服务器进行确认，同时代理服务器也不能对资源进行缓存</li>
<li>no-store: 浏览器不要缓存，每次都要向服务器请求资源</li>
</ul>
<h4 id="协商缓存"><a href="#协商缓存" class="headerlink" title="协商缓存"></a>协商缓存</h4><p>协商缓存就是与服务端协商之后，通过协商结果来判断是否使用本地缓存。</p>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/image-20230415201349393.png" alt="image-20230415201349393"></p>
<p>etags：资源的唯一标识</p>
<p>expires：缓存的过期时间</p>
<p>last-modified:资源最后的修改时间</p>
<p>expires和last-modified经常配合使用，客户端下次请求时就可以检查修改资源时间是否一致，如果一致就表明资源没修改，如果不一致，让服务器返回新资源。</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Web</tag>
      </tags>
  </entry>
</search>
