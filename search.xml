<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2023/04/14/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <tags>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux基础</title>
    <url>/2023/04/16/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%AC%94%E8%AE%B0/Linux%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h2 id="Linux基础"><a href="#Linux基础" class="headerlink" title="Linux基础"></a>Linux基础</h2><h3 id="学习Linux的价值"><a href="#学习Linux的价值" class="headerlink" title="学习Linux的价值"></a>学习Linux的价值</h3><ul>
<li>Linux是现代化应用程序交付的首选平台，无论是部署在裸机、虚拟化还是容器环境</li>
<li>公司内部服务(TCE、FaaS、SCM)统一使用Debian Linux系统</li>
<li>熟悉Linux基础命令，熟练运维前端常用服务(Nginx,Node.js)</li>
<li>加深对操作系统概念和实现的裸机，夯实基础知识</li>
</ul>
<h3 id="计算机硬件"><a href="#计算机硬件" class="headerlink" title="计算机硬件"></a>计算机硬件</h3><h4 id="计算机由五大单元组成"><a href="#计算机由五大单元组成" class="headerlink" title="计算机由五大单元组成"></a>计算机由五大单元组成</h4><ul>
<li>控制器</li>
<li>运算器</li>
<li>存储器单元</li>
<li>输入单元</li>
<li>输出单元</li>
</ul>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230416145548.png" alt="image-20230415222811528"></p>
<h3 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h3><p>管理和控制计算机系统中的硬件和软件资源，用于在用户与系统硬件之间传递信息</p>
<blockquote>
<p>操作系统做的事情</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230416150207.png" alt="image-20230415223222027"></p>
<blockquote>
<p>操作系统的启动流程</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230416150239.png" alt="image-20230415223608404"></p>
<h3 id="Linux系统概述"><a href="#Linux系统概述" class="headerlink" title="Linux系统概述"></a>Linux系统概述</h3><h4 id="查看Linux版本信息"><a href="#查看Linux版本信息" class="headerlink" title="查看Linux版本信息"></a>查看Linux版本信息</h4><p>内核版本信息</p>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230416150312.png" alt="image-20230415223943949"></p>
<p>发行版本信息</p>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230416150341.png" alt="image-20230415224031953"></p>
<h4 id="Linux系统应用领域"><a href="#Linux系统应用领域" class="headerlink" title="Linux系统应用领域"></a>Linux系统应用领域</h4><ul>
<li>IT服务器(操作系统、虚拟化和云计算)</li>
<li>嵌入式智能设备</li>
<li>个人办公桌面</li>
<li>学术研究与软件研发</li>
</ul>
<h4 id="Linux组成部分"><a href="#Linux组成部分" class="headerlink" title="Linux组成部分"></a>Linux组成部分</h4><ul>
<li><p>内核</p>
</li>
<li><p>shell</p>
</li>
<li><p>文件系统</p>
<p>操作系统中负责管理持久化数据的子系统，负责把用户的文件存在磁盘硬件中，持久化的保存文件。</p>
</li>
<li><p>应用程序</p>
</li>
</ul>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230416150410.png" alt="image-20230415224500780"></p>
<h4 id="Linux体系结构"><a href="#Linux体系结构" class="headerlink" title="Linux体系结构"></a>Linux体系结构</h4><p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230416150437.png" alt="image-20230415224632948"></p>
<ul>
<li>内核是硬件与软件之间的中间层</li>
<li>内核是一个资源管理程序</li>
<li>内核提供一组面向系统的命令</li>
</ul>
<h4 id="文件系统命令"><a href="#文件系统命令" class="headerlink" title="文件系统命令"></a>文件系统命令</h4><blockquote>
<p>查看文件系统类型</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230416150503.png" alt="image-20230415230959261"></p>
<blockquote>
<p>文件基本操作</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230416150526.png" alt="image-20230415231037026"></p>
<h4 id="文件读取流程"><a href="#文件读取流程" class="headerlink" title="文件读取流程"></a>文件读取流程</h4><p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230416150600.png" alt="image-20230415231130487"></p>
<h4 id="用户权限"><a href="#用户权限" class="headerlink" title="用户权限"></a>用户权限</h4><ul>
<li><p>用户账户</p>
<p>普通用户账户: 在系统中进行普通作业</p>
<p>超级用户账户: 在系统中对普通用户和整个系统进行管理</p>
</li>
<li><p>组账户</p>
<p>标准组: 可以容纳多个用户</p>
<p>私有组: 只有用户自己</p>
</li>
</ul>
<blockquote>
<p>查看用户信息</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230416150623.png" alt="image-20230415231735712"></p>
<blockquote>
<p>文件权限关于用户的三个概念:</p>
</blockquote>
<p>所有者：文件的所有者</p>
<p>所在组：文件的所有者所在的组</p>
<p>其他人：除文件所有者及所在组外的其他人</p>
<p>每个用户对于文件都有不同的权限，包括度&#x3D;读(R)、写(W)、执行(X)</p>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230416150702.png" alt="image-20230415232152821"></p>
<blockquote>
<p>用户权限操作</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230416150737.png" alt="image-20230415232229526"></p>
<h3 id="Linux软件包管理"><a href="#Linux软件包管理" class="headerlink" title="Linux软件包管理"></a>Linux软件包管理</h3><h4 id="软件包"><a href="#软件包" class="headerlink" title="软件包"></a>软件包</h4><p>通常指的是一个应用程序，它可以是一个GUI应用程序、命令行工具或(其他全检程序需要的)软件库</p>
<h4 id="软件包管理"><a href="#软件包管理" class="headerlink" title="软件包管理"></a>软件包管理</h4><p>底层工具:主要是用来处理安装和删除软件包文件等任务，DPKG,RPM</p>
<p>上层工具:主要是用于数据搜索任务和依赖解析任务，APT,YUM,DNF</p>
<h4 id="软件包管理工具"><a href="#软件包管理工具" class="headerlink" title="软件包管理工具"></a>软件包管理工具</h4><p>RPM(Red Hat Package Manager)，为Red hat 操作系统的包管理系统</p>
<p>DPKG(Debian package)，为Debian操作系统的包管理系统</p>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230416150800.png" alt="image-20230416143909320"></p>
<h4 id="Debian-APT常用命令"><a href="#Debian-APT常用命令" class="headerlink" title="Debian APT常用命令"></a>Debian APT常用命令</h4><ul>
<li>列出所有有更新的软件清单命令：apt update</li>
<li>安装指定的软件命令：apt install <package_name></li>
<li>安装多个软件包：apt install <package_1> <package_2></li>
<li>更新指定的软件命令：apt update <package_name></li>
<li>删除软件包命令：apt remove <package_name></li>
<li>查找软件包命令：apt search <keyword></li>
<li>列出所有已安装的包：apt list –installed</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Vuex基本使用</title>
    <url>/2023/04/15/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%AC%94%E8%AE%B0/Vuex%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="Vuex"><a href="#Vuex" class="headerlink" title="Vuex"></a>Vuex</h2><p><strong>工作原理图</strong></p>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230415233145.png" alt="image-20230410164330185"></p>
<h3 id="搭建vuex环境"><a href="#搭建vuex环境" class="headerlink" title="搭建vuex环境"></a>搭建vuex环境</h3><p><strong>安装vuex</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">npm i vuex</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230415233319.png" alt="image-20230410164330185"></p>
<p><strong>创建store</strong>  <code>index.js</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//创建Vuex中最为核心的sotre</span></span><br><span class="line"><span class="comment">//引入vuex</span></span><br><span class="line"><span class="keyword">import</span> &#123; createStore &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//用于响应组件中的动作</span></span><br><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">    <span class="title function_">jia</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;actions中的+被调用了&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用于操作数据 --state--</span></span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用于存储数据</span></span><br><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">    <span class="attr">sum</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建store</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">createStore</span>(&#123;</span><br><span class="line">    actions,</span><br><span class="line">    mutations,</span><br><span class="line">    state</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p><strong>引入store</strong>    <code>main.js</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//引入的不再是vue的构造函数 ，因为的是一个名为 createApp 的工厂函数</span></span><br><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span>  store  <span class="keyword">from</span> <span class="string">&#x27;./store&#x27;</span></span><br><span class="line"><span class="title function_">createApp</span>(<span class="title class_">App</span>).<span class="title function_">use</span>(store).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>使用<strong>vuex</strong></p>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230415233354.png" alt="image-20230410170440136"></p>
<p><strong>参数问题</strong></p>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230415233425.png" alt="image-20230410171547312"></p>
<p>context 类似与小型的store</p>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230415233451.png" alt="image-20230410171708444"></p>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230415233517.png" alt="image-20230410171852236"></p>
<h4 id="vuex小案例"><a href="#vuex小案例" class="headerlink" title="vuex小案例"></a>vuex小案例</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;h1&gt;当前求和为：&#123;&#123; $store.state.sum</span><br><span class="line">         &#125;&#125;&lt;/h1&gt;</span><br><span class="line">        &lt;select v-model.number=&quot;n&quot;&gt;</span><br><span class="line">            &lt;option value=&quot;1&quot;&gt;1&lt;/option&gt;</span><br><span class="line">            &lt;option value=&quot;2&quot;&gt;2&lt;/option&gt;</span><br><span class="line">            &lt;option value=&quot;3&quot;&gt;3&lt;/option&gt;</span><br><span class="line">        &lt;/select&gt;</span><br><span class="line">        &lt;button @click=&quot;increment&quot;&gt;+&lt;/button&gt;</span><br><span class="line">        &lt;button @click=&quot;decrement&quot;&gt;-&lt;/button&gt;</span><br><span class="line">        &lt;button @click=&quot;incrementOdd&quot;&gt;当前奇数再+&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    name: &#x27;Count&#x27;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            n: 1</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        increment() &#123;</span><br><span class="line">           this.$store.dispatch(&#x27;jia&#x27;,this.n)</span><br><span class="line">        &#125;,</span><br><span class="line">        decrement()&#123;</span><br><span class="line">            this.$store.dispatch(&#x27;jian&#x27;,this.n)</span><br><span class="line">        &#125;,</span><br><span class="line">        incrementOdd()&#123;</span><br><span class="line">            this.$store.dispatch(&#x27;jiaOdd&#x27;,this.n)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">button &#123;</span><br><span class="line">    margin-left: 10px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//创建Vuex中最为核心的sotre</span></span><br><span class="line"><span class="comment">//引入vuex</span></span><br><span class="line"><span class="keyword">import</span> &#123; createStore &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//用于响应组件中的动作</span></span><br><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">    <span class="title function_">jia</span>(<span class="params">context,value</span>) &#123;</span><br><span class="line">        <span class="comment">// console.log(context,value)</span></span><br><span class="line">        context.<span class="title function_">commit</span>(<span class="string">&#x27;JIA&#x27;</span>,value)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">jian</span>(<span class="params">context,value</span>)&#123;</span><br><span class="line">        context.<span class="title function_">commit</span>(<span class="string">&#x27;JIAN&#x27;</span>,value)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">jiaOdd</span>(<span class="params">context,value</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(context.<span class="property">state</span>.<span class="property">sum</span> % <span class="number">2</span>)&#123;</span><br><span class="line">            context.<span class="title function_">commit</span>(<span class="string">&#x27;JIAODD&#x27;</span>,value)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用于操作数据 --state--</span></span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">    <span class="title function_">JIA</span>(<span class="params">state,value</span>)&#123;</span><br><span class="line">        <span class="comment">// console.log(state)</span></span><br><span class="line">        state.<span class="property">sum</span> += value</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">JIAN</span>(<span class="params">state,value</span>)&#123;</span><br><span class="line">        state.<span class="property">sum</span> -= value</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">JIAODD</span>(<span class="params">state,value</span>)&#123;</span><br><span class="line">        state.<span class="property">sum</span> += value</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用于存储数据</span></span><br><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">    <span class="attr">sum</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建store</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">createStore</span>(&#123;</span><br><span class="line">    actions,</span><br><span class="line">    mutations,</span><br><span class="line">    state</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="getters配置项"><a href="#getters配置项" class="headerlink" title="getters配置项"></a>getters配置项</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//用于将state中的数据进行加工</span></span><br><span class="line"><span class="keyword">const</span> getters = &#123;</span><br><span class="line">    <span class="title function_">bigNum</span>(<span class="params">state</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> state.<span class="property">sum</span> * <span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230415233547.png" alt="image-20230410184319490"></p>
<h4 id="mapState和mapGetters"><a href="#mapState和mapGetters" class="headerlink" title="mapState和mapGetters"></a>mapState和mapGetters</h4><p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230415233642.png" alt="image-20230410190026551"></p>
<blockquote>
<p>书写计算属性</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">        //程序员亲自书写计算属性</span><br><span class="line">        he()&#123;</span><br><span class="line">            return this.$store.state.sum</span><br><span class="line">        &#125;,</span><br><span class="line">        xuexaio()&#123;</span><br><span class="line">            return this.$store.state.school</span><br><span class="line">        &#125;,</span><br><span class="line">        banji()&#123;</span><br><span class="line">            return  this.$store.state.classId</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>mapState生成计算属性</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230415233712.png" alt="image-20230410190847682"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//借助mapState生成计算属性 --数组写法 计算属性和state数据属性名相同</span><br><span class="line">    computed: &#123;</span><br><span class="line">        ...mapState([&#x27;sum&#x27;,&#x27;school&#x27;,&#x27;classId&#x27;])</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>mapGetters同上</p>
<h4 id="mapActions和mapMutations"><a href="#mapActions和mapMutations" class="headerlink" title="mapActions和mapMutations"></a>mapActions和mapMutations</h4><blockquote>
<p>mapMutations</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">		//调用mapMutations生成对应的方法，方法中会调用commit去联系mutations</span><br><span class="line">        ...mapMutations(&#123;increment:&#x27;JIA&#x27;,decrement:&#x27;JIAN&#x27;&#125;)</span><br><span class="line">        ,</span><br><span class="line">        incrementOdd() &#123;</span><br><span class="line">            this.$store.dispatch(&#x27;jiaOdd&#x27;, this.n)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p><strong>有参数必须传值</strong></p>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230415233732.png" alt="image-20230410192222043"></p>
<p>对象写法同mapState</p>
<h4 id="Vuex模块化"><a href="#Vuex模块化" class="headerlink" title="Vuex模块化"></a>Vuex模块化</h4><ol>
<li><p>目的：让代码更好维护，让多种数据分类更加明确。</p>
</li>
<li><p>修改<code>store.js</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> countAbout = &#123;</span><br><span class="line">  <span class="attr">namespaced</span>:<span class="literal">true</span>,<span class="comment">//开启命名空间</span></span><br><span class="line">  <span class="attr">state</span>:&#123;<span class="attr">x</span>:<span class="number">1</span>&#125;,</span><br><span class="line">  <span class="attr">mutations</span>: &#123; ... &#125;,</span><br><span class="line">  <span class="attr">actions</span>: &#123; ... &#125;,</span><br><span class="line">  <span class="attr">getters</span>: &#123;</span><br><span class="line">    <span class="title function_">bigSum</span>(<span class="params">state</span>)&#123;</span><br><span class="line">       <span class="keyword">return</span> state.<span class="property">sum</span> * <span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> personAbout = &#123;</span><br><span class="line">  <span class="attr">namespaced</span>:<span class="literal">true</span>,<span class="comment">//开启命名空间</span></span><br><span class="line">  <span class="attr">state</span>:&#123; ... &#125;,</span><br><span class="line">  <span class="attr">mutations</span>: &#123; ... &#125;,</span><br><span class="line">  <span class="attr">actions</span>: &#123; ... &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> <span class="title class_">Vuex</span>.<span class="title class_">Store</span>(&#123;</span><br><span class="line">  <span class="attr">modules</span>: &#123;</span><br><span class="line">    countAbout,</span><br><span class="line">    personAbout</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>开启命名空间后，组件中读取state数据：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//方式一：自己直接读取</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$store</span>.<span class="property">state</span>.<span class="property">personAbout</span>.<span class="property">list</span></span><br><span class="line"><span class="comment">//方式二：借助mapState读取：</span></span><br><span class="line">...<span class="title function_">mapState</span>(<span class="string">&#x27;countAbout&#x27;</span>,[<span class="string">&#x27;sum&#x27;</span>,<span class="string">&#x27;school&#x27;</span>,<span class="string">&#x27;subject&#x27;</span>]),</span><br></pre></td></tr></table></figure>
</li>
<li><p>开启命名空间后，组件中读取getters数据：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//方式一：自己直接读取</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$store</span>.<span class="property">getters</span>[<span class="string">&#x27;personAbout/firstPersonName&#x27;</span>]</span><br><span class="line"><span class="comment">//方式二：借助mapGetters读取：</span></span><br><span class="line">...<span class="title function_">mapGetters</span>(<span class="string">&#x27;countAbout&#x27;</span>,[<span class="string">&#x27;bigSum&#x27;</span>])</span><br></pre></td></tr></table></figure>
</li>
<li><p>开启命名空间后，组件中调用dispatch</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//方式一：自己直接dispatch</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">dispatch</span>(<span class="string">&#x27;personAbout/addPersonWang&#x27;</span>,person)</span><br><span class="line"><span class="comment">//方式二：借助mapActions：</span></span><br><span class="line">...<span class="title function_">mapActions</span>(<span class="string">&#x27;countAbout&#x27;</span>,&#123;<span class="attr">incrementOdd</span>:<span class="string">&#x27;jiaOdd&#x27;</span>,<span class="attr">incrementWait</span>:<span class="string">&#x27;jiaWait&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>开启命名空间后，组件中调用commit</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//方式一：自己直接commit</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">commit</span>(<span class="string">&#x27;personAbout/ADD_PERSON&#x27;</span>,person)</span><br><span class="line"><span class="comment">//方式二：借助mapMutations：</span></span><br><span class="line">...<span class="title function_">mapMutations</span>(<span class="string">&#x27;countAbout&#x27;</span>,&#123;<span class="attr">increment</span>:<span class="string">&#x27;JIA&#x27;</span>,<span class="attr">decrement</span>:<span class="string">&#x27;JIAN&#x27;</span>&#125;),</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>Vue</tag>
        <tag>Vuex</tag>
      </tags>
  </entry>
  <entry>
    <title>HTTP</title>
    <url>/2023/04/15/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%AC%94%E8%AE%B0/http/</url>
    <content><![CDATA[<h2 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h2><p>HTTP是一个在计算机世界里专门在两点之间传输文字、图片、音频、视频等超文本数据的约定和规范</p>
<h3 id="HTTP状态码"><a href="#HTTP状态码" class="headerlink" title="HTTP状态码"></a>HTTP状态码</h3><h4 id="常见的状态码分类"><a href="#常见的状态码分类" class="headerlink" title="常见的状态码分类"></a>常见的状态码分类</h4><ul>
<li>1xx - 服务器收到请求</li>
<li>2xx - 请求成功</li>
<li>3xx - 重定向</li>
<li>4xx - 客户端错误</li>
<li>5xx - 服务器错误</li>
</ul>
<h4 id="常见状态码"><a href="#常见状态码" class="headerlink" title="常见状态码"></a>常见状态码</h4><ul>
<li>200 - 表示一切正常，如果是非<code>HEAD</code>请求，服务器返回的响应头都会有body数据</li>
<li>204 - 与200基本相同，但响应头没有body数据</li>
<li>301 - 永久重定向，表示资源已经不存在了，需要更新URL重新发送请求，获取资源。(配合location，浏览器自动处理)</li>
<li>302 - 表示临时重定向，说明请求资源还在，但暂时需要另一个URL来访问。(配合location，浏览器自动处理)</li>
<li>403 - 表示服务器禁止访问资源，并不是客户端的请求出错。</li>
<li>404 - 请求的资源在服务器上未找到。</li>
<li>500 - 服务器错误</li>
<li>502 - 通常是服务器作为网关或代理时返回的错误码，表示服务器自身工作正常，访问后端服务器发生了错误。</li>
<li>503 - 服务器繁忙，无法响应客户端</li>
</ul>
<h3 id="HTTP缓存技术"><a href="#HTTP缓存技术" class="headerlink" title="HTTP缓存技术"></a>HTTP缓存技术</h3><h4 id="强制缓存"><a href="#强制缓存" class="headerlink" title="强制缓存"></a>强制缓存</h4><p>只要浏览器判断缓存没有过期，则直接使用浏览器的本地缓存，决定是否使用缓存的主动性在于浏览器这边。</p>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/image-20230415200005934.png" alt="bilibili资源"></p>
<p>max-age(一年时间)，表示资源时长期不需要改变的，浏览器或CDN都可以长期存储该资源</p>
<p>cache-control的值:</p>
<ul>
<li>max-age: 缓存最大过期时间</li>
<li>no-cache: 可以在客户端存储资源，但每次使用前都要和服务器进行确认，同时代理服务器也不能对资源进行缓存</li>
<li>no-store: 浏览器不要缓存，每次都要向服务器请求资源</li>
</ul>
<h4 id="协商缓存"><a href="#协商缓存" class="headerlink" title="协商缓存"></a>协商缓存</h4><p>协商缓存就是与服务端协商之后，通过协商结果来判断是否使用本地缓存。</p>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/image-20230415201349393.png" alt="image-20230415201349393"></p>
<p>etags：资源的唯一标识</p>
<p>expires：缓存的过期时间</p>
<p>last-modified:资源最后的修改时间</p>
<p>expires和last-modified经常配合使用，客户端下次请求时就可以检查修改资源时间是否一致，如果一致就表明资源没修改，如果不一致，让服务器返回新资源。</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title>JS-01</title>
    <url>/2023/04/21/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%AC%94%E8%AE%B0/javascript-01/</url>
    <content><![CDATA[<h2 id="JavaScript-01"><a href="#JavaScript-01" class="headerlink" title="JavaScript-01"></a>JavaScript-01</h2><h3 id="JS的书写位置"><a href="#JS的书写位置" class="headerlink" title="JS的书写位置"></a>JS的书写位置</h3><h4 id="内嵌式"><a href="#内嵌式" class="headerlink" title="内嵌式"></a>内嵌式</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1：将JS代码嵌入到html页面中</span></span><br><span class="line"><span class="comment">// 2：在html文件中添加一个script script标签中的代码就是JS代码</span></span><br><span class="line"><span class="comment">// 3：script标签的位置可以在任何地方(推荐在head或者body标签中)</span></span><br></pre></td></tr></table></figure>

<h4 id="外联式"><a href="#外联式" class="headerlink" title="外联式"></a>外联式</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;./a.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"><span class="comment">// 2：签的位置可以在任何地方(推荐在head或者body标签中)</span></span><br></pre></td></tr></table></figure>

<h3 id="JS的注释"><a href="#JS的注释" class="headerlink" title="JS的注释"></a>JS的注释</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"> <span class="comment">// 单行注释</span></span><br><span class="line"><span class="comment">// 快捷键 Ctrl + /</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">     多行注释</span></span><br><span class="line"><span class="comment">     快捷键: Shift + Alt + A</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h3 id="JS输入输出语法"><a href="#JS输入输出语法" class="headerlink" title="JS输入输出语法"></a>JS输入输出语法</h3><h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// JS中提供的输出信息的方式</span></span><br><span class="line"><span class="comment">// a) alert()</span></span><br><span class="line"><span class="comment">// b) console.log()</span></span><br><span class="line"><span class="comment">// c) document.write()  将信息在网页的body标签中输出的</span></span><br><span class="line"><span class="comment">//为了确保程序能够正常执行 所有的信息都加上引号 &#x27;&#x27; &quot;&quot; 都可以</span></span><br></pre></td></tr></table></figure>

<h4 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 输入语法 prompt()</span></span><br><span class="line">        <span class="title function_">prompt</span>(<span class="string">&#x27;请输入用户名：&#x27;</span>)</span><br><span class="line">        <span class="comment">//JS选择输入 confirm()</span></span><br><span class="line">        <span class="title function_">confirm</span>(<span class="string">&#x27;确定要恢复线下了吗？&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h4 id="JS中的注意事项"><a href="#JS中的注意事项" class="headerlink" title="JS中的注意事项"></a>JS中的注意事项</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//  JS中的注意事项</span></span><br><span class="line">        <span class="comment">// 1： JS中是严格区分字母大小写的</span></span><br><span class="line">        <span class="comment">// 2： 如果希望在网页中输出一个html标签 通过 document.write()</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;&lt;h1&gt;我是标题&lt;/h1&gt;&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="变量使用过程中的注意事项"><a href="#变量使用过程中的注意事项" class="headerlink" title="变量使用过程中的注意事项"></a>变量使用过程中的注意事项</h3><ul>
<li><p>自定义变量名那些是不规范的</p>
<p>☞：变量名不能以数字开头</p>
<p>☞：变量名中间不能出现空格</p>
<p>☞：变量名可以使用特殊符号 但是仅限于 _</p>
<p>☞：变量名不推荐使用汉字</p>
<p>☞：变量名不能使用关键字</p>
</li>
</ul>
<h3 id="let和var的区别"><a href="#let和var的区别" class="headerlink" title="let和var的区别"></a>let和var的区别</h3><ul>
<li>let 定义变量的时候，必须先定义后使用</li>
<li>var定义的变量，可以先使用后定义</li>
<li>let定义的变量名不能重复(在同一个作用域中)</li>
<li>var定义的变量名可以重复</li>
</ul>
<h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//常量：数据不能发生改变(不能修改)</span></span><br><span class="line"><span class="comment">// 语法：const 自定义变量名</span></span><br><span class="line"><span class="keyword">const</span> a = <span class="number">200</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230421231734.png" alt="图-01"></p>
<h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><ul>
<li>基本数据类型：数字类型、字符串类型、布尔类型、undefined类型、null类型</li>
<li>引用数据类型(复杂类型)：对象(object)</li>
</ul>
<h4 id="数字类型"><a href="#数字类型" class="headerlink" title="数字类型"></a>数字类型</h4><ul>
<li>数字类型(number)：只要变量的值是纯数字没有引号，那么变量就是数字类型</li>
<li>数字类型特点：在计算机中计算规则完全按照数学计算方式进行</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="number">123</span></span><br><span class="line"><span class="keyword">let</span> b = <span class="number">1.23</span></span><br></pre></td></tr></table></figure>

<h4 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h4><ul>
<li>字符串类型：只要变量的值带有引号(不管是单引号还是双引号)，那么变量就是字符串类型</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="string">&#x27;123&#x27;</span></span><br><span class="line"><span class="keyword">let</span> b = <span class="string">&quot;1.23&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="布尔类型"><a href="#布尔类型" class="headerlink" title="布尔类型"></a>布尔类型</h4><ul>
<li>布尔类型：只要变量的值是 true 或者 false，那么变量的数据类型就是布尔类型</li>
<li>true：代表正确的，条件成立的</li>
<li>false：代表错误的，条件不成立</li>
</ul>
<h4 id="数字类型和字符串类型的特点"><a href="#数字类型和字符串类型的特点" class="headerlink" title="数字类型和字符串类型的特点"></a>数字类型和字符串类型的特点</h4><p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230421231814.png" alt="图-02"></p>
<h4 id="模板字符串介绍"><a href="#模板字符串介绍" class="headerlink" title="模板字符串介绍"></a>模板字符串介绍</h4><ul>
<li>模板字符串： 就是用来解决拼接字符串的</li>
<li>模板字符串也是一个字符串，模板字符串的引号是反引号</li>
<li>在模板字符串中通过${变量} 获取变量值</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> username = <span class="string">`mio`</span></span><br><span class="line"><span class="keyword">let</span> age = <span class="number">18</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">`姓名：<span class="subst">$&#123;username&#125;</span>|年龄：<span class="subst">$&#123;age&#125;</span>`</span>)</span><br></pre></td></tr></table></figure>

<h4 id="其他数据类型"><a href="#其他数据类型" class="headerlink" title="其他数据类型"></a>其他数据类型</h4><blockquote>
<p>undefined类型</p>
</blockquote>
<ul>
<li><p>如果变量的值是undefined或者变量没有赋值 那么变量的类型就是undefined类型</p>
</li>
<li><p>undefined表示值本身表示的含义未定义</p>
</li>
</ul>
<blockquote>
<p>null类型(对象类型 属于引用类型)</p>
</blockquote>
<ul>
<li>如果变量的值是null，那么变量的数据类型叫空类型 —-对象类型</li>
<li>通过tepyof(变量)  获取当前变量的数据类型</li>
</ul>
<h4 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h4><h5 id="隐式类型转换-了解"><a href="#隐式类型转换-了解" class="headerlink" title="隐式类型转换(了解)"></a>隐式类型转换(了解)</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//属于计算机自己的行为</span></span><br><span class="line"><span class="comment">//计算机在数学运算过程中发生了隐式类型转换</span></span><br><span class="line"><span class="keyword">let</span> a = <span class="string">&#x27;1&#x27;</span></span><br><span class="line"><span class="keyword">let</span> b = <span class="number">1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a - b)</span><br><span class="line"><span class="comment">//输出 0  typeog(a - b) number</span></span><br><span class="line"><span class="comment">//如果加号也希望出现隐式类型转换，将加号写在值的前面</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(+a + b)</span><br><span class="line"><span class="comment">// 输出 2</span></span><br></pre></td></tr></table></figure>

<h5 id="强制类型转换-显示转换-属于程序员自己的行为"><a href="#强制类型转换-显示转换-属于程序员自己的行为" class="headerlink" title="强制类型转换(显示转换)  属于程序员自己的行为"></a>强制类型转换(显示转换)  属于程序员自己的行为</h5><blockquote>
<p>强制转换为数字类型</p>
</blockquote>
<ul>
<li>Number(变量)</li>
<li>parseInt(变量)</li>
<li>parseFloat(变量)</li>
</ul>
]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue2基础</title>
    <url>/2023/04/21/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%AC%94%E8%AE%B0/vue2%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h2 id="Vue2"><a href="#Vue2" class="headerlink" title="Vue2"></a>Vue2</h2><h3 id="初识Vue"><a href="#初识Vue" class="headerlink" title="初识Vue"></a>初识Vue</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 准备好一个容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello  &#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 阻止Vue在启动时生成生产提示 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//创建Vue实例</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> x = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>: <span class="string">&#x27;#root&#x27;</span>, <span class="comment">//el用于指定Vue实例为哪个容器服务，值通常为css选择器字符串</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>:&#123; <span class="comment">//data中用于存储数据，数据供el所指定的容器去使用， 我们暂时先写成一个对象</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>: <span class="string">&#x27;尚硅谷&#x27;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>插值语法</p>
</blockquote>
<ol>
<li><p>功能: 用于解析标签体内容</p>
</li>
<li><p>语法:  ，xxxx 会作为 js 表达式解析</p>
</li>
</ol>
<p><code>注意区分js表达式和js代码</code></p>
<h3 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h3><h4 id="指令语法"><a href="#指令语法" class="headerlink" title="指令语法"></a>指令语法</h4><ol>
<li><p>功能: 解析标签属性、解析标签体内容、绑定事件</p>
</li>
<li><p>举例：v-bind:href &#x3D; ‘xxxx’ ，xxxx 会作为 js 表达式被解析</p>
</li>
<li><p>说明：Vue 中有有很多的指令，此处只是用 v-bind 举个例子</p>
</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 指令语法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;url&quot;</span>&gt;</span>b站<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 简写形式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">&quot;url&quot;</span><span class="attr">:x</span>=<span class="string">&quot;name&quot;</span>&gt;</span>a站<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//创建Vue实例</span><br><span class="line">const x = new Vue(&#123;</span><br><span class="line">	el: &#x27;#root&#x27;, //el用于指定Vue实例为哪个容器服务，值通常为css选择器字符串</span><br><span class="line">	data:&#123; //data中用于存储数据，数据供el所指定的容器去使用， 我们暂时先写成一个对象</span><br><span class="line">	name: &#x27;尚硅谷&#x27;,</span><br><span class="line"> 	url: &#x27;https://www.bilibili.com/&#x27;</span><br><span class="line"> 		&#125;</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure>

<h4 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h4><blockquote>
<p>单向绑定</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        单向数据绑定: &lt;input type=&quot;text&quot; :value=&quot;name&quot;&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        Vue.config.productionTip = false;</span><br><span class="line"></span><br><span class="line">        new Vue(&#123;</span><br><span class="line">            el: &#x27;#root&#x27;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                name: &#x27;K-ON&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230421232915.png" alt="image-20230322200913782"></p>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230421232935.png" alt="image-20230322200933507"></p>
<p>双向数据绑定</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">双向数据绑定: &lt;input type=&quot;text&quot; v-model:value=&quot;name&quot;&gt;</span><br><span class="line">简写</span><br><span class="line">双向数据绑定: &lt;input type=&quot;text&quot; v-model=&quot;name&quot;&gt;</span><br></pre></td></tr></table></figure>

<p><code>v-model双向绑定一般都应用在表单元素上</code></p>
<blockquote>
<p>v-model:value可以简写成<code>v-model</code>因为v-model默认收集的就是value值</p>
</blockquote>
<h4 id="el和data的两种写法"><a href="#el和data的两种写法" class="headerlink" title="el和data的两种写法"></a>el和data的两种写法</h4><ol>
<li><p>el</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const x = new Vue(&#123;</span><br><span class="line">                    // el: &#x27;#root&#x27;,</span><br><span class="line">                    data: &#123;</span><br><span class="line">                        name: &#x27;K-ON&#x27;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">        x.$mount(&#x27;#root&#x27;);</span><br></pre></td></tr></table></figure>
</li>
<li><p>data</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">new Vue(&#123;  </span><br><span class="line">                    el: &#x27;#root&#x27;,</span><br><span class="line">                    // data: &#123;</span><br><span class="line">                    //     name: &#x27;K-ON&#x27;</span><br><span class="line">                    // &#125;</span><br><span class="line">                    // 第二种写法 函数式</span><br><span class="line">                    data() &#123;</span><br><span class="line">                        return&#123;</span><br><span class="line">                            name: &#x27;K-on&#x27;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br></pre></td></tr></table></figure>

<p><strong>Vue管理的函数，不能写成箭头函数</strong></p>
</li>
</ol>
<h3 id="Vue模型"><a href="#Vue模型" class="headerlink" title="Vue模型"></a>Vue模型</h3><ol>
<li><p>M：模型(Model) ：对应 data 中的数据</p>
</li>
<li><p>V：视图(View) ：模板</p>
</li>
<li><p>VM：视图模型(ViewModel) ： Vue 实例对象</p>
</li>
</ol>
<p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230421233016.png" alt="image-20230322205214655"></p>
<h3 id="数据代理"><a href="#数据代理" class="headerlink" title="数据代理"></a>数据代理</h3><p><img src="https://raw.githubusercontent.com/anfadagfag/pictures/main/img/20230421233043.png" alt="image-20230324152642260"></p>
<h4 id="回顾Object-defineProperty方法"><a href="#回顾Object-defineProperty方法" class="headerlink" title="回顾Object.defineProperty方法"></a>回顾Object.defineProperty方法</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">       <span class="keyword">let</span> person = &#123;</span><br><span class="line">           <span class="attr">name</span>: <span class="string">&#x27;张三&#x27;</span>,</span><br><span class="line">           <span class="attr">sex</span>: <span class="string">&#x27;男&#x27;</span></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(person,<span class="string">&#x27;age&#x27;</span>,&#123;</span><br><span class="line">           <span class="attr">value</span>: <span class="number">18</span>,</span><br><span class="line">           <span class="attr">enumerable</span>: <span class="literal">true</span>, <span class="comment">//控制属性是否可以被枚举</span></span><br><span class="line">           <span class="attr">writable</span>: <span class="literal">true</span>,  <span class="comment">//是否可以被修改</span></span><br><span class="line">           <span class="attr">configurable</span>: <span class="literal">true</span> <span class="comment">//删除 </span></span><br><span class="line">            <span class="attr">get</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">               <span class="keyword">return</span> number</span><br><span class="line">           &#125;,</span><br><span class="line">           <span class="comment">//当有人修改person的age属性时，set函数的setter就会被调用，且会收到修改的具体值</span></span><br><span class="line">           <span class="title function_">set</span>(<span class="params">value</span>)&#123;</span><br><span class="line">           &#125;         </span><br><span class="line">       &#125;)</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(person);</span><br><span class="line">   &lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h4 id="Vue数据代理"><a href="#Vue数据代理" class="headerlink" title="Vue数据代理"></a>Vue数据代理</h4><h4 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h4><blockquote>
<p>v-on</p>
</blockquote>
<p>1.使用v-on:xxx 或 @xxx 绑定事件，其中xxx是事件名；<br>                            2.事件的回调需要配置在methods对象中，最终会在vm上；<br>                            3.methods中配置的函数，不要用箭头函数！否则this就不是vm了；<br>                            4.methods中配置的函数，都是被Vue所管理的函数，this的指向是vm 或 组件实例对象；<br>                            5.@click&#x3D;”demo” 和 @click&#x3D;”demo($event)” 效果一致，但后者可以传参；</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;name&#125;&#125; 永不毕业<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;showInfo1&quot;</span>&gt;</span>点击提示信息1 不传参<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showInfo2($event,66)&quot;</span>&gt;</span>点击提示信息2 传参<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">el</span>: <span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">name</span>: <span class="string">&#x27;K-ON&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="comment">// showInfo()&#123;</span></span></span><br><span class="line"><span class="language-javascript">                        <span class="comment">//     alert(&#x27;我永远喜欢mio酱&#x27;);</span></span></span><br><span class="line"><span class="language-javascript">                        <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">                        <span class="title function_">showInfo1</span>(<span class="params">event</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="variable language_">console</span>.<span class="title function_">log</span>(event.<span class="property">target</span>.<span class="property">innerText</span>);</span></span><br><span class="line"><span class="language-javascript">                            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>); <span class="comment">//此处的this是vm</span></span></span><br><span class="line"><span class="language-javascript">                        &#125;,</span></span><br><span class="line"><span class="language-javascript">                        <span class="title function_">showInfo2</span>(<span class="params">event,number</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="variable language_">console</span>.<span class="title function_">log</span>(number,event)</span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>事件修饰符</p>
</blockquote>
<p>Vue中的事件修饰符：</p>
<p>​            1.prevent：阻止默认事件（常用）；</p>
<p>​            2.stop：阻止事件冒泡（常用）；</p>
<p>​            3.once：事件只触发一次（常用）；</p>
<p>​            4.capture：使用事件的捕获模式；</p>
<p>​            5.self：只有event.target是当前操作的元素时才触发事件；</p>
<p>​            6.passive：事件的默认行为立即执行，无需等待事件回调执行完毕；</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>事件修饰符<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;./vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">			*&#123;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">			&#125;</span></span><br><span class="line"><span class="language-css">			<span class="selector-class">.demo1</span>&#123;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">			&#125;</span></span><br><span class="line"><span class="language-css">			<span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">padding</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">			&#125;</span></span><br><span class="line"><span class="language-css">			<span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">padding</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">			&#125;</span></span><br><span class="line"><span class="language-css">			<span class="selector-class">.list</span>&#123;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">background-color</span>: peru;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">overflow</span>: auto;</span></span><br><span class="line"><span class="language-css">			&#125;</span></span><br><span class="line"><span class="language-css">			<span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">			&#125;</span></span><br><span class="line"><span class="language-css">		</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h2</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;学习<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 阻止默认事件（常用） --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.atguigu.com&quot;</span> @<span class="attr">click.prevent</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!-- 阻止事件冒泡（常用） --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo1&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.stop</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- 修饰符可以连续写 --&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- &lt;a href=&quot;http://www.atguigu.com&quot; @click.prevent.stop=&quot;showInfo&quot;&gt;点我提示信息&lt;/a&gt; --&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!-- 事件只触发一次（常用） --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.once</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!-- 使用事件的捕获模式 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span> @<span class="attr">click.capture</span>=<span class="string">&quot;showMsg(1)&quot;</span>&gt;</span></span><br><span class="line">				div1</span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;showMsg(2)&quot;</span>&gt;</span></span><br><span class="line">					div2</span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!-- 只有event.target是当前操作的元素时才触发事件； --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo1&quot;</span> @<span class="attr">click.self</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!-- 事件的默认行为立即执行，无需等待事件回调执行完毕； --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">ul</span> @<span class="attr">wheel.passive</span>=<span class="string">&quot;demo&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">		<span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">			<span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">			<span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">name</span>:<span class="string">&#x27;尚硅谷&#x27;</span></span></span><br><span class="line"><span class="language-javascript">			&#125;,</span></span><br><span class="line"><span class="language-javascript">			<span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="title function_">showInfo</span>(<span class="params">e</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">					<span class="title function_">alert</span>(<span class="string">&#x27;同学你好！&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">					<span class="comment">// console.log(e.target)</span></span></span><br><span class="line"><span class="language-javascript">				&#125;,</span></span><br><span class="line"><span class="language-javascript">				<span class="title function_">showMsg</span>(<span class="params">msg</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">					<span class="variable language_">console</span>.<span class="title function_">log</span>(msg)</span></span><br><span class="line"><span class="language-javascript">				&#125;,</span></span><br><span class="line"><span class="language-javascript">				<span class="title function_">demo</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">					<span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">						<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;#&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">					&#125;</span></span><br><span class="line"><span class="language-javascript">					<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;累坏了&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">				&#125;</span></span><br><span class="line"><span class="language-javascript">			&#125;</span></span><br><span class="line"><span class="language-javascript">		&#125;)</span></span><br><span class="line"><span class="language-javascript">	</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>键盘事件</p>
</blockquote>
<p>1.Vue中常用的按键别名：</p>
<p>​              回车 &#x3D;&gt; enter</p>
<p>​              删除 &#x3D;&gt; delete (捕获“删除”和“退格”键)</p>
<p>​              退出 &#x3D;&gt; esc</p>
<p>​              空格 &#x3D;&gt; space</p>
<p>​              换行 &#x3D;&gt; tab (特殊，必须配合keydown去使用)</p>
<p>​              上 &#x3D;&gt; up</p>
<p>​              下 &#x3D;&gt; down</p>
<p>​              左 &#x3D;&gt; left</p>
<p>​              右 &#x3D;&gt; right</p>
<p>​        2.Vue未提供别名的按键，可以使用按键原始的key值去绑定，但注意要转为kebab-case（短横线命名）</p>
<p>​        3.系统修饰键（用法特殊）：ctrl、alt、shift、meta</p>
<p>​              (1).配合keyup使用：按下修饰键的同时，再按下其他键，随后释放其他键，事件才被触发。</p>
<p>​              (2).配合keydown使用：正常触发事件。</p>
<p>​        4.也可以使用keyCode去指定具体的按键（不推荐）</p>
<p>​        5.Vue.config.keyCodes.自定义键名 &#x3D; 键码，可以去定制按键别名</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>键盘事件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;./vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h2</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;学习<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;按下回车提示输入&quot;</span> @<span class="attr">keydown.tab</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">		<span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"><span class="language-javascript">		<span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">keyCodes</span>.<span class="property">huiche</span> = <span class="number">13</span> <span class="comment">//定义了一个别名按键</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">			<span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">			<span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">name</span>:<span class="string">&#x27;尚硅谷&#x27;</span></span></span><br><span class="line"><span class="language-javascript">			&#125;,</span></span><br><span class="line"><span class="language-javascript">			<span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="title function_">showInfo</span>(<span class="params">e</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">					<span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">key</span>,e.<span class="property">keyCode</span>)</span></span><br><span class="line"><span class="language-javascript">					<span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span></span><br><span class="line"><span class="language-javascript">				&#125;</span></span><br><span class="line"><span class="language-javascript">			&#125;,</span></span><br><span class="line"><span class="language-javascript">		&#125;)</span></span><br><span class="line"><span class="language-javascript">	</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="计算属性-computed"><a href="#计算属性-computed" class="headerlink" title="计算属性 computed"></a>计算属性 <code>computed</code></h4><p>1.定义：要用的属性不存在，要通过已有属性计算得来。<br>                    2.原理：底层借助了Objcet.defineproperty方法提供的getter和setter。<br>                    3.get函数什么时候执行？<br>                                (1).初次读取时会执行一次。<br>                                (2).当依赖的数据发生改变时会被再次调用。<br>                    4.优势：与methods实现相比，内部有缓存机制（复用），效率更高，调试方便。<br>                    5.备注：<br>                            1.计算属性最终会出现在vm上，直接读取使用即可。<br>                            2.如果计算属性要被修改，那必须写set函数去响应修改，且set中要引起计算时依赖的数据发生改变。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>姓名案例_计算属性实现<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;./vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			测试：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;x&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			全名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 全名：&lt;span&gt;&#123;&#123;fullName&#125;&#125;&lt;/span&gt; &lt;br/&gt;&lt;br/&gt;</span></span><br><span class="line"><span class="comment">			全名：&lt;span&gt;&#123;&#123;fullName&#125;&#125;&lt;/span&gt; &lt;br/&gt;&lt;br/&gt;</span></span><br><span class="line"><span class="comment">			全名：&lt;span&gt;&#123;&#123;fullName&#125;&#125;&lt;/span&gt; --&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">		<span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">			<span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">			<span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">firstName</span>:<span class="string">&#x27;张&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">lastName</span>:<span class="string">&#x27;三&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">x</span>:<span class="string">&#x27;你好&#x27;</span></span></span><br><span class="line"><span class="language-javascript">			&#125;,</span></span><br><span class="line"><span class="language-javascript">			<span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="title function_">demo</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">					</span></span><br><span class="line"><span class="language-javascript">				&#125;</span></span><br><span class="line"><span class="language-javascript">			&#125;,</span></span><br><span class="line"><span class="language-javascript">			<span class="attr">computed</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">fullName</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">					<span class="comment">//get有什么作用？当有人读取fullName时，get就会被调用，且返回值就作为fullName的值</span></span></span><br><span class="line"><span class="language-javascript">					<span class="comment">//get什么时候调用？1.初次读取fullName时。2.所依赖的数据发生变化时。</span></span></span><br><span class="line"><span class="language-javascript">					<span class="title function_">get</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">						<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;get被调用了&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">						<span class="comment">// console.log(this) //此处的this是vm</span></span></span><br><span class="line"><span class="language-javascript">						<span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">firstName</span> + <span class="string">&#x27;-&#x27;</span> + <span class="variable language_">this</span>.<span class="property">lastName</span></span></span><br><span class="line"><span class="language-javascript">					&#125;,</span></span><br><span class="line"><span class="language-javascript">					<span class="comment">//set什么时候调用? 当fullName被修改时。</span></span></span><br><span class="line"><span class="language-javascript">					<span class="title function_">set</span>(<span class="params">value</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">						<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;set&#x27;</span>,value)</span></span><br><span class="line"><span class="language-javascript">						<span class="keyword">const</span> arr = value.<span class="title function_">split</span>(<span class="string">&#x27;-&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">						<span class="variable language_">this</span>.<span class="property">firstName</span> = arr[<span class="number">0</span>]</span></span><br><span class="line"><span class="language-javascript">						<span class="variable language_">this</span>.<span class="property">lastName</span> = arr[<span class="number">1</span>]</span></span><br><span class="line"><span class="language-javascript">					&#125;</span></span><br><span class="line"><span class="language-javascript">				&#125;</span></span><br><span class="line"><span class="language-javascript">			&#125;</span></span><br><span class="line"><span class="language-javascript">		&#125;)</span></span><br><span class="line"><span class="language-javascript">	</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>计算属性的简写形式</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">		<span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">			<span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span><br><span class="line">			<span class="attr">data</span>:&#123;</span><br><span class="line">				<span class="attr">firstName</span>:<span class="string">&#x27;张&#x27;</span>,</span><br><span class="line">				<span class="attr">lastName</span>:<span class="string">&#x27;三&#x27;</span>,</span><br><span class="line">			&#125;,</span><br><span class="line">			<span class="attr">computed</span>:&#123;</span><br><span class="line">				<span class="comment">//完整写法</span></span><br><span class="line">				<span class="comment">/* fullName:&#123;</span></span><br><span class="line"><span class="comment">					get()&#123;</span></span><br><span class="line"><span class="comment">						console.log(&#x27;get被调用了&#x27;)</span></span><br><span class="line"><span class="comment">						return this.firstName + &#x27;-&#x27; + this.lastName</span></span><br><span class="line"><span class="comment">					&#125;,</span></span><br><span class="line"><span class="comment">					set(value)&#123;</span></span><br><span class="line"><span class="comment">						console.log(&#x27;set&#x27;,value)</span></span><br><span class="line"><span class="comment">						const arr = value.split(&#x27;-&#x27;)</span></span><br><span class="line"><span class="comment">						this.firstName = arr[0]</span></span><br><span class="line"><span class="comment">						this.lastName = arr[1]</span></span><br><span class="line"><span class="comment">					&#125;</span></span><br><span class="line"><span class="comment">				&#125; */</span></span><br><span class="line">				<span class="comment">//简写</span></span><br><span class="line">				<span class="title function_">fullName</span>(<span class="params"></span>)&#123;</span><br><span class="line">					<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;get被调用了&#x27;</span>)</span><br><span class="line">					<span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">firstName</span> + <span class="string">&#x27;-&#x27;</span> + <span class="variable language_">this</span>.<span class="property">lastName</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line">	&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h4 id="监视属性-watch"><a href="#监视属性-watch" class="headerlink" title="监视属性  watch"></a>监视属性  <code>watch</code></h4><p>监视属性watch：</p>
<p>​          1.当被监视的属性变化时, 回调函数自动调用, 进行相关操作</p>
<p>​          2.监视的属性必须存在，才能进行监视！！</p>
<p>​          3.监视的两种写法：</p>
<p>​              (1).new Vue时传入watch配置</p>
<p>​              (2).通过vm.$watch监视</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>天气案例_监视属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;./vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h2</span>&gt;</span>今天天气很&#123;&#123;info&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeWeather&quot;</span>&gt;</span>切换天气<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">		<span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"><span class="language-javascript">		</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">			<span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">			<span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">isHot</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">			&#125;,</span></span><br><span class="line"><span class="language-javascript">			<span class="attr">computed</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="title function_">info</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">					<span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">isHot</span> ? <span class="string">&#x27;炎热&#x27;</span> : <span class="string">&#x27;凉爽&#x27;</span></span></span><br><span class="line"><span class="language-javascript">				&#125;</span></span><br><span class="line"><span class="language-javascript">			&#125;,</span></span><br><span class="line"><span class="language-javascript">			<span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="title function_">changeWeather</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">					<span class="variable language_">this</span>.<span class="property">isHot</span> = !<span class="variable language_">this</span>.<span class="property">isHot</span></span></span><br><span class="line"><span class="language-javascript">				&#125;</span></span><br><span class="line"><span class="language-javascript">			&#125;,</span></span><br><span class="line"><span class="language-javascript">			<span class="comment">/* watch:&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">				isHot:&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">					immediate:true, //初始化时让handler调用一下</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">					//handler什么时候调用？当isHot发生改变时。</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">					handler(newValue,oldValue)&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">						console.log(&#x27;isHot被修改了&#x27;,newValue,oldValue)</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">					&#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">				&#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">			&#125; */</span></span></span><br><span class="line"><span class="language-javascript">		&#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">		vm.$watch(<span class="string">&#x27;isHot&#x27;</span>,&#123;</span></span><br><span class="line"><span class="language-javascript">			<span class="attr">immediate</span>:<span class="literal">true</span>, <span class="comment">//初始化时让handler调用一下</span></span></span><br><span class="line"><span class="language-javascript">			<span class="comment">//handler什么时候调用？当isHot发生改变时。</span></span></span><br><span class="line"><span class="language-javascript">			<span class="title function_">handler</span>(<span class="params">newValue,oldValue</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;isHot被修改了&#x27;</span>,newValue,oldValue)</span></span><br><span class="line"><span class="language-javascript">			&#125;</span></span><br><span class="line"><span class="language-javascript">		&#125;)</span></span><br><span class="line"><span class="language-javascript">	</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>深度监视</p>
</blockquote>
<p>深度监视：<br>                        (1).Vue中的watch默认不监测对象内部值的改变（一层）。<br>                        (2).配置deep:true可以监测对象内部值改变（多层）。<br>                备注：<br>                        (1).Vue自身可以监测对象内部值的改变，但Vue提供的watch默认不可以！<br>                        (2).使用watch时根据数据的具体结构，决定是否采用深度监视。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="attr">watch</span>:&#123;</span><br><span class="line">		<span class="attr">isHot</span>:&#123;</span><br><span class="line">			<span class="attr">immediate</span>:<span class="literal">true</span>, <span class="comment">//初始化时让handler调用一下</span></span><br><span class="line">			<span class="comment">//handler什么时候调用？当isHot发生改变时。</span></span><br><span class="line">			<span class="title function_">handler</span>(<span class="params">newValue,oldValue</span>)&#123;</span><br><span class="line">				<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;isHot被修改了&#x27;</span>,newValue,oldValue)</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;,</span><br><span class="line">              <span class="comment">//监视多级结构中某个属性的变化</span></span><br><span class="line">              <span class="comment">// &#x27;number.a&#x27;:&#123;</span></span><br><span class="line">              <span class="comment">//     handler()&#123;</span></span><br><span class="line">              <span class="comment">//         console.log(&#x27;a被改变了&#x27;)</span></span><br><span class="line">              <span class="comment">//     &#125;</span></span><br><span class="line">              <span class="comment">// &#125; </span></span><br><span class="line">              <span class="comment">//监视多级结构中所有属性的变化</span></span><br><span class="line">              <span class="attr">number</span>:&#123;</span><br><span class="line">                  <span class="attr">deep</span>:<span class="literal">true</span>,</span><br><span class="line">                  <span class="title function_">handler</span>(<span class="params"></span>)&#123;</span><br><span class="line">                      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;number被改变了&#x27;</span>)</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>监视的简写属性</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//第一种</span></span><br><span class="line"><span class="attr">watch</span>:&#123;</span><br><span class="line">				<span class="comment">//正常写法</span></span><br><span class="line">				<span class="comment">/* isHot:&#123;</span></span><br><span class="line"><span class="comment">					// immediate:true, //初始化时让handler调用一下</span></span><br><span class="line"><span class="comment">					// deep:true,//深度监视</span></span><br><span class="line"><span class="comment">					handler(newValue,oldValue)&#123;</span></span><br><span class="line"><span class="comment">						console.log(&#x27;isHot被修改了&#x27;,newValue,oldValue)</span></span><br><span class="line"><span class="comment">					&#125;</span></span><br><span class="line"><span class="comment">				&#125;, */</span></span><br><span class="line">				<span class="comment">//简写</span></span><br><span class="line">				<span class="comment">/* isHot(newValue,oldValue)&#123;</span></span><br><span class="line"><span class="comment">					console.log(&#x27;isHot被修改了&#x27;,newValue,oldValue,this)</span></span><br><span class="line"><span class="comment">				&#125; */</span></span><br><span class="line">			&#125;</span><br><span class="line"><span class="comment">//第二种</span></span><br><span class="line"><span class="comment">//正常写法</span></span><br><span class="line">		vm.$watch(<span class="string">&#x27;isHot&#x27;</span>,&#123;</span><br><span class="line">			<span class="attr">immediate</span>:<span class="literal">true</span>, <span class="comment">//初始化时让handler调用一下</span></span><br><span class="line">			<span class="attr">deep</span>:<span class="literal">true</span>,<span class="comment">//深度监视</span></span><br><span class="line">			<span class="title function_">handler</span>(<span class="params">newValue,oldValue</span>)&#123;</span><br><span class="line">				<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;isHot被修改了&#x27;</span>,newValue,oldValue)</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line"></span><br><span class="line">		<span class="comment">//简写</span></span><br><span class="line">		vm.$watch(<span class="string">&#x27;isHot&#x27;</span>,<span class="function">(<span class="params">newValue,oldValue</span>)=&gt;</span>&#123;</span><br><span class="line">			<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;isHot被修改了&#x27;</span>,newValue,oldValue,<span class="variable language_">this</span>)</span><br><span class="line">		&#125;)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>computed和watch之间的区别：<br>1.computed能完成的功能，watch都可以完成。<br>2.watch能完成的功能，computed不一定能完成，例如：watch可以进行异步操作。</p>
<p>两个重要的小原则：<br>1.所被Vue管理的函数，最好写成普通函数，这样this的指向才是vm 或 组件实例对象。<br>2.所有不被Vue所管理的函数（定时器的回调函数、ajax的回调函数等、Promise的回调函数），最好写成箭头函数，<br>这样this的指向才是vm 或 组件实例对象。</p>
</blockquote>
<h4 id="绑定class-和style样式"><a href="#绑定class-和style样式" class="headerlink" title="绑定class 和style样式"></a>绑定class 和style样式</h4><p>绑定样式：</p>
<ol>
<li>class样式</li>
</ol>
<p>​                写法:class&#x3D;”xxx” xxx可以是字符串、对象、数组。</p>
<p>​                字符串写法适用于：类名不确定，要动态获取。</p>
<p>​                 对象写法适用于：要绑定多个样式，个数不确定，名字也不确定。</p>
<p>​                 数组写法适用于：要绑定多个样式，个数确定，名字也确定，但不确定用不用。</p>
<ol start="2">
<li>style样式</li>
</ol>
<p>​                :style&#x3D;”{fontSize: xxx}”其中xxx是动态值。</p>
<p>​                :style&#x3D;”[a,b]”其中a、b是样式对象。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>绑定样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">			<span class="selector-class">.basic</span>&#123;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">			&#125;</span></span><br><span class="line"><span class="language-css">			</span></span><br><span class="line"><span class="language-css">			<span class="selector-class">.happy</span>&#123;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">border</span>: <span class="number">4px</span> solid red;;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>, <span class="number">0.644</span>);</span></span><br><span class="line"><span class="language-css">				<span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">30deg</span>,yellow,pink,orange,yellow);</span></span><br><span class="line"><span class="language-css">			&#125;</span></span><br><span class="line"><span class="language-css">			<span class="selector-class">.sad</span>&#123;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">border</span>: <span class="number">4px</span> dashed <span class="built_in">rgb</span>(<span class="number">2</span>, <span class="number">197</span>, <span class="number">2</span>);</span></span><br><span class="line"><span class="language-css">				<span class="attribute">background-color</span>: gray;</span></span><br><span class="line"><span class="language-css">			&#125;</span></span><br><span class="line"><span class="language-css">			<span class="selector-class">.normal</span>&#123;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">			&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">			<span class="selector-class">.atguigu1</span>&#123;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">background-color</span>: yellowgreen;</span></span><br><span class="line"><span class="language-css">			&#125;</span></span><br><span class="line"><span class="language-css">			<span class="selector-class">.atguigu2</span>&#123;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">text-shadow</span>:<span class="number">2px</span> <span class="number">2px</span> <span class="number">10px</span> red;</span></span><br><span class="line"><span class="language-css">			&#125;</span></span><br><span class="line"><span class="language-css">			<span class="selector-class">.atguigu3</span>&#123;</span></span><br><span class="line"><span class="language-css">				<span class="attribute">border-radius</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">			&#125;</span></span><br><span class="line"><span class="language-css">		</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 绑定class样式--字符串写法，适用于：样式的类名不确定，需要动态指定 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;mood&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;changeMood&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!-- 绑定class样式--数组写法，适用于：要绑定的样式个数不确定、名字也不确定 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;classArr&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!-- 绑定class样式--对象写法，适用于：要绑定的样式个数确定、名字也确定，但要动态决定用不用 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;classObj&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!-- 绑定style样式--对象写法 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;styleObj&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 绑定style样式--数组写法 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;styleArr&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">		<span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript">		</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">			<span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">			<span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">name</span>:<span class="string">&#x27;尚硅谷&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">mood</span>:<span class="string">&#x27;normal&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">classArr</span>:[<span class="string">&#x27;atguigu1&#x27;</span>,<span class="string">&#x27;atguigu2&#x27;</span>,<span class="string">&#x27;atguigu3&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">classObj</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">					<span class="attr">atguigu1</span>:<span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">					<span class="attr">atguigu2</span>:<span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">				&#125;,</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">styleObj</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">					<span class="attr">fontSize</span>: <span class="string">&#x27;40px&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">					<span class="attr">color</span>:<span class="string">&#x27;red&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">				&#125;,</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">styleObj2</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">					<span class="attr">backgroundColor</span>:<span class="string">&#x27;orange&#x27;</span></span></span><br><span class="line"><span class="language-javascript">				&#125;,</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">styleArr</span>:[</span></span><br><span class="line"><span class="language-javascript">					&#123;</span></span><br><span class="line"><span class="language-javascript">						<span class="attr">fontSize</span>: <span class="string">&#x27;40px&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">						<span class="attr">color</span>:<span class="string">&#x27;blue&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">					&#125;,</span></span><br><span class="line"><span class="language-javascript">					&#123;</span></span><br><span class="line"><span class="language-javascript">						<span class="attr">backgroundColor</span>:<span class="string">&#x27;gray&#x27;</span></span></span><br><span class="line"><span class="language-javascript">					&#125;</span></span><br><span class="line"><span class="language-javascript">				]</span></span><br><span class="line"><span class="language-javascript">			&#125;,</span></span><br><span class="line"><span class="language-javascript">			<span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="title function_">changeMood</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">					<span class="keyword">const</span> arr = [<span class="string">&#x27;happy&#x27;</span>,<span class="string">&#x27;sad&#x27;</span>,<span class="string">&#x27;normal&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript">					<span class="keyword">const</span> index = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*<span class="number">3</span>)</span></span><br><span class="line"><span class="language-javascript">					<span class="variable language_">this</span>.<span class="property">mood</span> = arr[index]</span></span><br><span class="line"><span class="language-javascript">				&#125;</span></span><br><span class="line"><span class="language-javascript">			&#125;,</span></span><br><span class="line"><span class="language-javascript">		&#125;)</span></span><br><span class="line"><span class="language-javascript">	</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	</span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h4><p>条件渲染：</p>
<p>​              1.v-if</p>
<p>​                    写法：</p>
<p>​                        (1).v-if&#x3D;”表达式” </p>
<p>​                        (2).v-else-if&#x3D;”表达式”</p>
<p>​                        (3).v-else&#x3D;”表达式”</p>
<p>​                    适用于：切换频率较低的场景。</p>
<p>​                    特点：不展示的DOM元素直接被移除。</p>
<p>​                    注意：v-if可以和:v-else-if、v-else一起使用，但要求结构不能被“打断”。</p>
<p>​              2.v-show</p>
<p>​                    写法：v-show&#x3D;”表达式”</p>
<p>​                    适用于：切换频率较高的场景。</p>
<p>​                    特点：不展示的DOM元素未被移除，仅仅是使用样式隐藏掉</p>
<p>​                </p>
<p>​              3.备注：使用v-if的时，元素可能无法获取到，而使用v-show一定可以获取到。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>条件渲染<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;./vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前的n值是:&#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 使用v-show做条件渲染 --&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- &lt;h2 v-show=&quot;false&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt; --&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- &lt;h2 v-show=&quot;1 === 1&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!-- 使用v-if做条件渲染 --&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- &lt;h2 v-if=&quot;false&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt; --&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- &lt;h2 v-if=&quot;1 === 1&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!-- v-else和v-else-if --&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- &lt;div v-if=&quot;n === 1&quot;&gt;Angular&lt;/div&gt;</span></span><br><span class="line"><span class="comment">			&lt;div v-else-if=&quot;n === 2&quot;&gt;React&lt;/div&gt;</span></span><br><span class="line"><span class="comment">			&lt;div v-else-if=&quot;n === 3&quot;&gt;Vue&lt;/div&gt;</span></span><br><span class="line"><span class="comment">			&lt;div v-else&gt;哈哈&lt;/div&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!-- v-if与template的配合使用 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">&quot;n === 1&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">h2</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">h2</span>&gt;</span>尚硅谷<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">h2</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">		<span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">			<span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">			<span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">name</span>:<span class="string">&#x27;尚硅谷&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">n</span>:<span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">			&#125;</span></span><br><span class="line"><span class="language-javascript">		&#125;)</span></span><br><span class="line"><span class="language-javascript">	</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
</search>
